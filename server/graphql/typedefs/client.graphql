# Types
type Client {
  id: ID!
  uniqueId: Int!
  firstName: String
  lastName: String
  email: String
  role: Role!
  trucks: [ID!]!
  businessName: String!
  rfc: String!
  CFDIuse: CFDIuse!
  cellphone: [String!]!
  address: Address!
  prices: [Price]!
  balance: Float!
  credit: Float!
}

type ClientTurnSummary {
  info: Client!
  count: Int!
  tickets: [Ticket!]!
}

type Address {
  country: String!
  state: String!
  municipality: String!
  city: String!
  suburb: String!
  street: String!
  extNumber: String
  intNumber: String!
  zipcode: String!
}

type Price {
  rock: Rock!
  price: Float!
}

# Inputs
input ClientInput {
  firstName: String!
  lastName: String!
  email: String!
  trucks: [ID!]
  businessName: String!
  rfc: String!
  CFDIuse: CFDIuse!
  cellphone: [String!]!
  address: AddressInput!
  prices: [PriceInput!]!
  balance: Float!
  credit: Float!
}

input ClientEditInput {
  id: ID!
  firstName: String
  lastName: String
  email: String
  trucks: [ID]
  businessName: String
  rfc: String
  CFDIuse: CFDIuse
  cellphone: [String]
  address: AddressInput
  prices: [PriceInput!]!
  balance: Float!
  credit: Float
}

input AddressInput {
  country: String!
  state: String!
  municipality: String!
  city: String!
  suburb: String!
  street: String!
  extNumber: String
  intNumber: String!
  zipcode: String!
}

input PriceInput {
  rock: ID!
  price: Float!
}

input ClientFilters {
  limit: Int
  search: String
}

# Enums
enum CFDIuse {
  G01
  G03
  NE
}
