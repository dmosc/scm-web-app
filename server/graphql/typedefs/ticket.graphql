# Types
type Ticket {
  id: ID!
  folio: String
  driver: String
  client: Client
  truck: Truck
  product: Rock
  tax: Float
  weight: Float
  totalWeight: Float
  totalPrice: Float
  credit: Boolean
  date: Date
  inTruckImage: String
  outTruckImage: String
  bill: Boolean!
  turn: Turn
}

type ArchiveTicket {
  id: Int!
  folio: String!
  driver: String!
  client: String!
  businessName: String!
  address: String!
  rfc: String!
  plates: String!
  truckWeight: Float!
  totalWeight: Float!
  tons: Float!
  product: String!
  price: Float!
  tax: Float!
  total: Float!
  inTruckImage: String!
  outTruckImage: String!
  createdAt: Date!
  updatedAt: Date!
}

# Inputs
input TicketInput {
  plates: String!
  product: ID!
}

input TicketInitInput {
  plates: String!
  product: ID!
  inTruckImage: String!
  folderKey: s3FolderKey!
  id: ID!
}

input TicketProductLoadInput {
  id: ID!
  outTruckImage: String!
}

input TicketSubmitInput {
  id: ID!
  driver: String!
  weight: Float!
  credit: Boolean!
  bill: Boolean!
}

input TicketFilters {
  limit: Int
  offset: Int
  search: String
  start: Date
  end: Date
  date: Date
}

input ArchivedTicketFilters {
  limit: Int
  offset: Int
  search: String
  start: Date
  end: Date
  date: Date
  type: ArchivedTicketType
  product: String
}

enum ArchivedTicketType {
  BILL
  REMISSION
}
